# -*- coding: utf-8 -*-
"""loan_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16NvAwD26P8_f9VApSZjO_TR0tBZpqx0q
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import io
train_df = pd.read_csv(io.BytesIO(uploaded['Loan_Train.csv']))
train_df.info()
train_df.head()

train_df = train_df.drop(columns = ["Loan_ID"])
categorical_columns = ["Gender", "Married", "Dependents","Education","Self_Employed","Credit_History","Property_Area","Loan_Amount_Term"]
print(categorical_columns)
Numerical_columns = ("ApplicantIncome","CoapplicantIncome","LoanAmount")
print(Numerical_columns)

import seaborn as sns
import matplotlib.pyplot as plt

fig,axes = plt.subplots(4,2,figsize=(12,15))
for idx,cat_col in enumerate(categorical_columns):
  row,col = idx//2, idx%2
  sns.countplot(x = cat_col, data=train_df,hue="Loan_Status",ax=axes[row,col])
plt.subplots_adjust(hspace=1)

fig,axes = plt.subplots(1,3,figsize=(17,5))
for idx,cat_col in enumerate(Numerical_columns):
  sns.boxplot(y = cat_col,data =train_df,x="Loan_Status", ax = axes[idx] )
print(train_df[Numerical_columns].describe())
plt.subplots.adjust(hspace = 1 )

#data preprocessing
#encoding categorical_columns
train_df_encoded = pd.get_dummies(train_df, drop_first = False)
train_df_encoded.head()

X = train_df_encoded.drop(column = "Loan_Status_Y")
y = train_df_encoded("Loan_Status_Y")

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,stratisfy =y, random_state = 40 )

#handling missing inputs
from sklearn.impute import SimpleImputer
imp = SimpleImputer(strategy = "mean")
imp_train = imp.fit(X_train)
X_train = imp_train.transform(X_train)
X_test_imp = imp_train.transform()